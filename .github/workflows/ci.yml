name: Storybook PR Checks
on:
  pull_request:
    branches:
      - main

env:
  PROJECT_TOKEN: ${{ secrets.PROJECT_TOKEN }}

jobs:

  smartui-gihub-action:
    name: Execute Storybook build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Step for push event
      run: |
        echo "This is a push event!"
        echo "The latest commitId $(git log -1 --format='%H')"
        echo "COMMIT_ID=$(git log -1 --format='%H')" >> $GITHUB_ENV
      if: github.event_name == 'push'

    - name: Step for pull_request event
      run: |
        echo "This is a pull_request event!"
        git log -n 5 --format="%H %an %s" | while read line; do echo "$line"; done
        echo "The latest commitId $(git log -n 2 --format='%H' | tail -n 1)"
        echo "COMMIT_ID=$(git log -n 2 --format='%H' | tail -n 1)" >> $GITHUB_ENV
      if: github.event_name == 'pull_request'

    - name: Create Github URL
      run: |
        API_HOST=https://api.github.com
        echo "The latest commitId is $COMMIT_ID"
        GITHUB_URL=$API_HOST/repos/$GITHUB_REPOSITORY/statuses/$COMMIT_ID
        echo "GITHUB_URL: $GITHUB_URL"
        echo "GITHUB_URL=$GITHUB_URL" >> $GITHUB_ENV

    # - name: Find Last CommitId
    #   run: |
    #     API_HOST=https://api.github.com
    #     # Check out the PR branch
    #     git checkout $GITHUB_HEAD_REF
    #     # Get the commit ID of the last commit
    #     COMMIT_ID=$(git rev-parse HEAD)
    #     echo "Last commit ID of PR: $COMMIT_ID"
    #     GITHUB_URL=$API_HOST/repos/$GITHUB_REPOSITORY/statuses/$COMMIT_ID
    #     echo "GITHUB_URL: $GITHUB_URL"
    #     echo "GITHUB_URL=$GITHUB_URL" >> $GITHUB_ENV
   
    - name: Run the repo
      run: 
        npm i
    - name : run npm
      run:
        npm install @lambdatest/smartui-storybook -g
    - name : step 1
      run:
        smartui storybook ./storybook-static  --force-rebuild --config .smartui.json
